apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki-deployment
  namespace: prometheus-stack
  labels:
    app: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
        - name: loki
          image: grafana/loki:latest
          ports:
            - containerPort: 3100
        - name: health-check
          image: curlimages/curl:latest
          command: ["/bin/sh"]
          args:
            [
              "-c",
              "while true; do if curl -f http://angular-service.default.svc.cluster.local:4200/angular/health; then sleep 10; else exit 1; fi; done",
            ]
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - if curl -f http://angular-service.default.svc.cluster.local:4200/angular/health; then exit 0; else exit 1; fi
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - if curl -f http://angular-service.default.svc.cluster.local:4200/angular/ready; then exit 0; else exit 1; fi
            initialDelaySeconds: 5
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: loki-service
  namespace: prometheus-stack
spec:
  selector:
    app: loki
  ports:
    - protocol: TCP
      port: 3100
      targetPort: 3100
